name: ci

on:
  pull_request:
    branches: [main]

jobs:
  tests-py:
    name: Tests Python
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
    
      - name: Install pip
        run: python -m pip install --upgrade pip
  
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit tests
        run: |
          cd src
          python -m unittest test_package/test_*.py
          cd ..
        
      - name: Install bandit
        run: pip install bandit
      
      - name: Check for security issues
        run: bandit -r .

  tests-go:
    name: Tests Golang
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: '^1.23.2'

      - name: Check version
        run: go version
      
      - name: Install go mod
        run: go mod download
      
      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest
      
      - name: Check for goose
        run: goose --version

      - name: Setup test database
        run: |
          sudo rm -f ./sql/test.db 
          cd sql/schema
          goose sqlite3 ../test.db up
          cd ..
          cd ..

      - name: Unit tests
        run: go test ./api
        
      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Check for security issues
        run: gosec -exclude-generated ./...

  style-py:
    name: Style Python
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install pylint
        run: pip install pylint
      
      - name: Linting, errors
        run: pylint --disable E0401 ./src/*.py -E

  style-go:
    name: Style Golang
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # - name: Install staticcheck
      #   run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run format tests
        run: test -z $(go fmt ./...)
      
      # - name: Linting
      #   run: staticcheck ./... 

